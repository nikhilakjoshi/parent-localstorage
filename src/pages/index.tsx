import Head from "next/head";
import clsx from "clsx";
import { Rubik } from "next/font/google";
import { useCallback, useEffect, useRef } from "react";

const font = Rubik({
  subsets: ["latin-ext"],
});

export default function Home() {
  const iframeRef = useRef<HTMLIFrameElement>(null);
  const triggerPostMessage = useCallback(async (token: string) => {
    iframeRef.current?.contentWindow?.postMessage(
      JSON.stringify({ token }),
      "https://child-localstorage.vercel.app",
    );
  }, []);
  const fetchSamlToken = useCallback(async () => {
    try {
      const resp = await fetch(
        "https://child-localstorage.vercel.app/api/saml",
        {
          method: "POST",
          credentials: "include",
        },
      );
      const tokenResp = (await resp.json()) as {
        message?: string;
        samlToken?: string;
      };
      return tokenResp;
    } catch (error) {
      console.error(error);
      return { message: "Error fetching token" };
    }
  }, []);
  useEffect(() => {
    fetchSamlToken()
      .then((tokenResp) => {
        if (tokenResp.samlToken) {
          triggerPostMessage(tokenResp.samlToken);
        }
      })
      .catch((err) => console.error(err));
  }, []);
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={clsx("flex min-h-screen flex-col", font.className)}>
        <nav className="bg-blue-200 px-20 py-4">
          <div className="text-xl font-semibold">
            Parent App -{" "}
            <span className="py-0.2 inline-block rounded bg-gray-400 px-2 font-mono text-gray-100">
              Local Storage
            </span>
          </div>
        </nav>
        <div className="grow px-20 py-4">
          <iframe
            ref={iframeRef}
            src="https://child-localstorage.vercel.app"
            sandbox="allow-scripts allow-same-origin allow-forms allow-popups allow-modals"
            className="h-[60dvh] w-full rounded shadow"
          ></iframe>
        </div>
      </main>
    </>
  );
}
